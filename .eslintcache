[{"D:\\selfproject\\anugerah-theater\\src\\index.js":"1","D:\\selfproject\\anugerah-theater\\src\\App.js":"2","D:\\selfproject\\anugerah-theater\\src\\components\\consts.js":"3","D:\\selfproject\\anugerah-theater\\src\\components\\Section.js":"4","D:\\selfproject\\anugerah-theater\\src\\components\\Navbar.js":"5","D:\\selfproject\\anugerah-theater\\src\\components\\HeaderContent.js":"6"},{"size":431,"mtime":1608520374703,"results":"7","hashOfConfig":"8"},{"size":2753,"mtime":1608586690685,"results":"9","hashOfConfig":"8"},{"size":915,"mtime":1608590990554,"results":"10","hashOfConfig":"8"},{"size":2687,"mtime":1608589831886,"results":"11","hashOfConfig":"8"},{"size":981,"mtime":1608541045921,"results":"12","hashOfConfig":"8"},{"size":2719,"mtime":1608590005475,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"a7w9o8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"D:\\selfproject\\anugerah-theater\\src\\index.js",[],["29","30"],"D:\\selfproject\\anugerah-theater\\src\\App.js",[],"D:\\selfproject\\anugerah-theater\\src\\components\\consts.js",[],"D:\\selfproject\\anugerah-theater\\src\\components\\Section.js",["31"],"import React, { useEffect, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { imgURL } from \"./consts\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst Section = ({\r\n  className,\r\n  title,\r\n  fetchURL,\r\n  isPotrait,\r\n  onPlay,\r\n  playingSection,\r\n}) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [movieTrailerLink, setMovieTrailerLink] = useState(\"\");\r\n  const [reactPlayerSize, setReactPlayerSize] = useState([\"0\", \"0\"]);\r\n  const [isTrailerPlaying, setIsTrailerPlaying] = useState(false);\r\n  const [movieId, setMovieId] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      Axios.get(fetchURL).then((request) => {\r\n        setMovies(request.data.results);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const playTrailer = (movieName, id) => {\r\n    setMovieId(id);\r\n    // const movieIdSelector = document.getElementById(`${id}`);\r\n    if (reactPlayerSize[1] === \"0\") {\r\n      setReactPlayerSize([\"100%\", \"60vh\"]);\r\n      setIsTrailerPlaying(true);\r\n      onPlay();\r\n    } else if (reactPlayerSize[1] === \"60vh\" && id === movieId) {\r\n      pauseTrailer();\r\n    }\r\n    movieTrailer(movieName).then((response) => {\r\n      setMovieTrailerLink(response);\r\n    });\r\n  };\r\n\r\n  function pauseTrailer() {\r\n    if (reactPlayerSize[1] === \"60vh\") {\r\n      setReactPlayerSize([\"100%\", \"0\"]);\r\n      setIsTrailerPlaying(false);\r\n    }\r\n  }\r\n\r\n  if (title !== playingSection) {\r\n    pauseTrailer();\r\n  }\r\n\r\n  const movieList = movies.map((movie) => {\r\n    const imgSrc = `${imgURL}${\r\n      isPotrait\r\n        ? movie.poster_path ?? \"show-netflix-logo\"\r\n        : movie.backdrop_path ?? \"show-netflix-logo\"\r\n    }`;\r\n    return (\r\n      <div className=\"movie-container\">\r\n        <img\r\n          key={movie.id}\r\n          id={movie.id}\r\n          className={isPotrait ? \"portrait\" : \"landscape\"}\r\n          src={\r\n            imgSrc.includes(\"show-netflix-logo\")\r\n              ? \"/img/netflix_logo.svg\"\r\n              : imgSrc\r\n          }\r\n          alt={movie.original_title ?? movie.original_name}\r\n          onClick={() =>\r\n            playTrailer(movie.original_title ?? movie.original_name, movie.id)\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={className} key={title}>\r\n      <h1>{title}</h1>\r\n      <div className=\"movielist\">{movieList}</div>\r\n      <div className=\"showTrailer\">\r\n        <ReactPlayer\r\n          url={movieTrailerLink}\r\n          width={reactPlayerSize[0]}\r\n          height={reactPlayerSize[1]}\r\n          playing={isTrailerPlaying}\r\n          controls\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Section;\r\n","D:\\selfproject\\anugerah-theater\\src\\components\\Navbar.js",[],"D:\\selfproject\\anugerah-theater\\src\\components\\HeaderContent.js",["32"],"import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { imgURL } from \"./consts\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport ReactPlayer from \"react-player\";\r\nconst HeaderContent = ({ className, fetchURL, playingSection, onPlay }) => {\r\n  const [movie, setMovie] = useState({});\r\n  const [trailerLink, setTrailerLink] = useState(\"\");\r\n  const [reactPlayerSize, setReactPlayerSize] = useState([\"0\", \"0\"]);\r\n  const [isTrailerPlaying, setIsTrailerPlaying] = useState(false);\r\n  const [playText, setPlayText] = useState(\"Play\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await Axios.get(fetchURL).then((request) => {\r\n        setMovie(request.data.results[Math.floor(Math.random() * 20)]);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const playTrailer = (movieName) => {\r\n    onPlay();\r\n    if (reactPlayerSize[1] === \"0\") {\r\n      setReactPlayerSize([\"70vw\", \"96vh\"]);\r\n      setIsTrailerPlaying(true);\r\n      setPlayText(\"Pause\");\r\n    } else if (reactPlayerSize[1] === \"96vh\") {\r\n      pauseTrailer();\r\n    }\r\n    movieTrailer(movieName).then((response) => {\r\n      setTrailerLink(response);\r\n    });\r\n  };\r\n\r\n  function pauseTrailer() {\r\n    if (reactPlayerSize[1] === \"96vh\") {\r\n      setReactPlayerSize([\"100vw\", \"0\"]);\r\n      setIsTrailerPlaying(false);\r\n      setPlayText(\"Play\");\r\n    }\r\n  }\r\n\r\n  if (\"Header\" !== playingSection) {\r\n    pauseTrailer();\r\n  }\r\n\r\n  function concenate(string, digit) {\r\n    return string.length > digit ? string.substr(0, digit) + \"...\" : string;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <img src={`${imgURL}${movie.backdrop_path}`} alt={movie.original_title} />\r\n      <div className=\"fade-bottom\"></div>\r\n      <div className=\"header-movie-info white-text\">\r\n        <h1>\r\n          {movie.original_title ?? movie.original_name\r\n            ? concenate(movie.original_title ?? movie.original_name, 30)\r\n            : movie.original_title ?? movie.original_name}\r\n        </h1>\r\n        <p>\r\n          {movie.overview ? concenate(movie.overview, 150) : movie.overview}\r\n        </p>\r\n        <div className=\"row \">\r\n          <button\r\n            onClick={() =>\r\n              playTrailer(movie.original_name ?? movie.original_title)\r\n            }\r\n          >\r\n            {playText}\r\n          </button>\r\n          <button>More Info</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-trailer p-relative\">\r\n        <ReactPlayer\r\n          url={trailerLink}\r\n          width={reactPlayerSize[0]}\r\n          height={reactPlayerSize[1]}\r\n          playing={isTrailerPlaying}\r\n          controls\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default HeaderContent;\r\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":28,"column":6,"nodeType":"39","endLine":28,"endColumn":8,"suggestions":"40"},{"ruleId":"37","severity":1,"message":"38","line":20,"column":6,"nodeType":"39","endLine":20,"endColumn":8,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchURL'. Either include it or remove the dependency array.","ArrayExpression",["44"],["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},{"desc":"46","fix":"48"},"Update the dependencies array to be: [fetchURL]",{"range":"49","text":"50"},{"range":"51","text":"50"},[794,796],"[fetchURL]",[793,795]]